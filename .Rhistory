#Trait datasets with out traitement on the features
trait = read.csv("C:/Users/marie/Documents/DSTI_Cours/Python_Class/Python_Lab/Exam_project/Project 2/CoralReefFishSpeciesAssessment/Data/traits_combined_2023.csv", sep = ';')
View(trait)
#Drop the features not usefull for the model
trait2 <- trait %>%
select(MaxLengthTL,Body_size_max,MaxLengthTL, MaxLengthSL, MaxJuvLength, AspectRatio, swim_type, swim_mode,
body_shape, Total.length.Body.depth.ratio, presence_defense, ComDepthMax, DepthMax, Depth_min, Depth_range, Size_group, Position.in.water.column.,Level_water,
Specialist, Fished, Spawning, Brackish, Multihabitat, Rafter, Relief, Coral, Home_range)
library(tidyverse)
library(Boruta)
trait2 <- trait %>%
select(MaxLengthTL,Body_size_max,MaxLengthTL, MaxLengthSL, MaxJuvLength, AspectRatio, swim_type, swim_mode,
body_shape, Total.length.Body.depth.ratio, presence_defense, ComDepthMax, DepthMax, Depth_min, Depth_range, Size_group, Position.in.water.column.,Level_water,
Specialist, Fished, Spawning, Brackish, Multihabitat, Rafter, Relief, Coral, Home_range)
View(trait2)
trait_borruta <- transform(trait2,
swim_type=as.factor(swim_type),
swim_mode=as.factor(swim_mode),
body_shape=as.factor(body_shape),
presence_defense=as.factor(presence_defense),
Size_group=as.factor(Size_group),
Position.in.water.column.=as.factor(Position.in.water.column.),
Level_water=as.factor(Level_water),
Fished=as.factor(Fished),
Spawning=as.factor(Spawning),
Brackish=as.factor(Brackish),
Multihabitat=as.factor(Multihabitat),
Specialist=as.factor(Specialist),
Rafter=as.factor(Rafter))
#Boruta analysis, the Coral is in this dataset the indice of fish diversity in function of the coral cover. By the authors its consider as the targets in this dataset
borruta_output3 <- Boruta(Coral~., data= trait_borruta, doTrace=2)
View(trait2)
View(trait_borruta)
#Correct the data type of the numerical cols from character to numeric
trait_borruta <- transform(
trait2,
MaxLengthTL=as.numeric(MaxLengthTL),
Body_size_max=as.numeric(Body_size_max),
MaxLengthTL=as.numeric(MaxLengthTL),
MaxLengthSL=as.numeric(MaxLengthSL),
MaxJuvLength=as.numeric(MaxJuvLength),
AspectRatio=as.numeric(AspectRatio),
Total.length.Body.depth.ratio=as.numeric(Total.length.Body.depth.ratio),
ComDepthMax=as.numeric( ComDepthMax),
DepthMax=as.numeric(DepthMax),
Depth_min=as.numeric(Depth_min),
Depth_range=as.numeric(Depth_range),
Relief=as.numeric(Relief),
Coral=as.numeric(Coral)
)
trait_borruta <- transform(
trait2,
MaxLengthTL=as.numeric(MaxLengthTL),
Body_size_max=as.numeric(Body_size_max),
MaxLengthTL=as.numeric(MaxLengthTL),
MaxLengthSL=as.numeric(MaxLengthSL),
MaxJuvLength=as.numeric(MaxJuvLength),
AspectRatio=as.numeric(AspectRatio),
Total.length.Body.depth.ratio=as.numeric(Total.length.Body.depth.ratio),
ComDepthMax=as.numeric( ComDepthMax),
DepthMax=as.numeric(DepthMax),
Depth_min=as.numeric(Depth_min),
Depth_range=as.numeric(Depth_range),
Relief=as.numeric(Relief),
Coral=as.numeric(Coral))
#Replace the NaN values by 0
test <- trait2
test$Coral <- ifelse(test$Coral == 'NaN', '0', test$Coral == test$Coral)
View(test)
#Replace the NaN values by 0
test <- trait2
test$Coral <- ifelse(test$Coral == 'N/A', '0', )
test$Coral <- ifelse(test$Coral == 'N/A', '0', test$Coral == test$Coral)
View(test)
#Replace the NaN values by 0
test <- trait2
test$Coral <- ifelse(test$Coral == 'N/A', '0', test$Coral)
View(test)
trait2$Coral <- ifelse(trait2$Coral == 'N/A', '0', trait2$Coral)
trait2$Relief <- ifelse(trait2$Relief == 'N/A', '0', trait2$Relief)
trait2$MaxJuvLength <- ifelse(trait2$MaxJuvLength == 'N/A', '0', trait2$MaxJuvLength)
trait_borruta <- transform(
trait2,
MaxLengthTL=as.numeric(MaxLengthTL),
Body_size_max=as.numeric(Body_size_max),
MaxLengthTL=as.numeric(MaxLengthTL),
MaxLengthSL=as.numeric(MaxLengthSL),
MaxJuvLength=as.numeric(MaxJuvLength),
AspectRatio=as.numeric(AspectRatio),
Total.length.Body.depth.ratio=as.numeric(Total.length.Body.depth.ratio),
ComDepthMax=as.numeric( ComDepthMax),
DepthMax=as.numeric(DepthMax),
Depth_min=as.numeric(Depth_min),
Depth_range=as.numeric(Depth_range),
Relief=as.numeric(Relief),
Coral=as.numeric(Coral))
View(trait_borruta)
#Replace the NaN values by 0
test <- trait2
#Correct the data type of the numerical cols from character to numeric
trait_borruta <- transform(
test,
MaxLengthTL=as.numeric(MaxLengthTL),
Body_size_max=as.numeric(Body_size_max),
MaxLengthTL=as.numeric(MaxLengthTL),
MaxLengthSL=as.numeric(MaxLengthSL),
MaxJuvLength=as.numeric(MaxJuvLength),
AspectRatio=as.numeric(AspectRatio),
Total.length.Body.depth.ratio=as.numeric(Total.length.Body.depth.ratio),
ComDepthMax=as.numeric( ComDepthMax),
DepthMax=as.numeric(DepthMax),
Depth_min=as.numeric(Depth_min),
Depth_range=as.numeric(Depth_range),
Relief=as.numeric(Relief),
Coral=as.numeric(Coral))
trait_borruta <- transform(trait2,
swim_type=as.factor(swim_type),
swim_mode=as.factor(swim_mode),
body_shape=as.factor(body_shape),
presence_defense=as.factor(presence_defense),
Size_group=as.factor(Size_group),
Position.in.water.column.=as.factor(Position.in.water.column.),
Level_water=as.factor(Level_water),
Fished=as.factor(Fished),
Spawning=as.factor(Spawning),
Brackish=as.factor(Brackish),
Multihabitat=as.factor(Multihabitat),
Specialist=as.factor(Specialist),
Rafter=as.factor(Rafter),
Home_range=as.factor(Home_range))
#Drop the features not usefull for the model
trait2 <- trait %>%
select(MaxLengthTL, Body_size_max, MaxLengthTL, MaxLengthSL, MaxJuvLength, AspectRatio, swim_type, swim_mode,
body_shape, Total.length.Body.depth.ratio, presence_defense, ComDepthMax, DepthMax, Depth_min, Depth_range, Size_group, Position.in.water.column.,Level_water,
Specialist, Fished, Spawning, Brackish, Multihabitat, Rafter, Relief, Coral, Home_range)
#Replace the NaN values by 0
test <- trait2
#Correct the data type of the numerical cols from character to numeric
trait_borruta <- transform(
test,
MaxLengthTL=as.numeric(MaxLengthTL),
Body_size_max=as.numeric(Body_size_max),
MaxLengthTL=as.numeric(MaxLengthTL),
MaxLengthSL=as.numeric(MaxLengthSL),
MaxJuvLength=as.numeric(MaxJuvLength),
AspectRatio=as.numeric(AspectRatio),
Total.length.Body.depth.ratio=as.numeric(Total.length.Body.depth.ratio),
ComDepthMax=as.numeric( ComDepthMax),
DepthMax=as.numeric(DepthMax),
Depth_min=as.numeric(Depth_min),
Depth_range=as.numeric(Depth_range),
Relief=as.numeric(Relief),
Coral=as.numeric(Coral))
warning()
###############################################################################################################################################################################
#Trait datasets with out traitement on the features
trait = read.csv("C:/Users/marie/Documents/DSTI_Cours/Python_Class/Python_Lab/Exam_project/Project 2/CoralReefFishSpeciesAssessment/Data/traits_combined_2023.csv", sep = ';')
View(trait)
#Drop the features not usefull for the model
trait2 <- trait %>%
select(MaxLengthTL, Body_size_max, MaxLengthTL, MaxLengthSL, MaxJuvLength, AspectRatio, swim_type, swim_mode,
body_shape, Total.length.Body.depth.ratio, presence_defense, ComDepthMax, DepthMax, Depth_min, Depth_range, Size_group, Position.in.water.column.,Level_water,
Specialist, Fished, Spawning, Brackish, Multihabitat, Rafter, Relief, Coral, Home_range)
#Replace the NaN values by 0
test <- trait2
test$Coral <- ifelse(test$Coral == 'N/A', '0', test$Coral)
View(test)
#Replace the NaN values by 0
test <- trait2
test$Coral <- ifelse(test$Coral == 'N/A', 0, test$Coral)
View(test)
test <- transform(test, Coral=as.numeric(Coral))
View(test)
trait2$Coral <- ifelse(trait2$Coral == 'N/A', 0, trait2$Coral)
trait2$Relief <- ifelse(trait2$Relief == 'N/A', 0, trait2$Relief)
trait2$Body_size_max <- ifelse(trait2$Body_size_max == 'N/A', 0, trait2$Body_size_max)
trait2$MaxJuvLength <- ifelse(trait2$MaxJuvLength == 'N/A', 0, trait2$MaxJuvLength)
trait2 <- transform(trait2,
Coral=as.numeric(Coral),
Relief=as.numeric(Relief),
Body_size_max=as.numeric(Body_size_max),
MaxJuvLength=as.numeric(MaxJuvLength))
describe(trait2)
description(trait2)
described(trait2)
library(dplyr)
described(trait2)
describe(trait2)
descr(trait2)
summarise(trait2)
summarize(trait2)
#Pass the categorical cols as factor
trait_borruta <- transform(trait2,
swim_type=as.factor(swim_type),
swim_mode=as.factor(swim_mode),
body_shape=as.factor(body_shape),
presence_defense=as.factor(presence_defense),
Size_group=as.factor(Size_group),
Position.in.water.column.=as.factor(Position.in.water.column.),
Level_water=as.factor(Level_water),
Fished=as.factor(Fished),
Spawning=as.factor(Spawning),
Brackish=as.factor(Brackish),
Multihabitat=as.factor(Multihabitat),
Specialist=as.factor(Specialist),
Rafter=as.factor(Rafter),
Home_range=as.factor(Home_range))
#Boruta analysis, the Coral is in this dataset the indice of fish diversity in function of the coral cover. By the authors its consider as the targets in this dataset
borruta_output3 <- Boruta(Coral~., data= trait_borruta, doTrace=2)
print(borruta_output3)
plot(borruta_output3, xlab = "", xaxt = "n")
k <- lapply(1:ncol(borruta_output3$ImpHistory), function(i)
borruta_output3$ImpHistory[is.finite(borruta_output3$ImpHistory[,i]),i])
names(k) <- colnames(borruta_output3$ImpHistory)
Labels <- sort(sapply(k,median))
axis(side = 1, las=2, labels = names(Labels),
at = 1:ncol(borruta_output3$ImpHistory), cex.axis=0.7)
#Boruta analysis, the Relief is in this dataset the indice of fish diversity in function of the coral cover. By the authors its consider as the targets in this dataset with Coral
borruta_output4 <- Boruta(Relief~., data= trait_borruta, doTrace=2)
print(borruta_output4)
plot(borruta_output4, xlab = "", xaxt = "n")
k <- lapply(1:ncol(borruta_output4$ImpHistory), function(i)
borruta_output3$ImpHistory[is.finite(borruta_output4$ImpHistory[,i]),i])
names(k) <- colnames(borruta_output4$ImpHistory)
Labels <- sort(sapply(k,median))
axis(side = 1, las=2, labels = names(Labels),
at = 1:ncol(borruta_output4$ImpHistory), cex.axis=0.7)
borruta_output4 <- Boruta(c(Coral, Relief)~., data= trait_borruta, doTrace=2)
borruta_output4 <- Boruta(c('Coral', 'Relief')~., data= trait_borruta, doTrace=2)
# dataset
data = read.csv("C:/Users/marie/Documents/DSTI_Cours/Python_Class/Python_Lab/Exam_project/Project 2/CoralReefFishSpeciesAssessment/species_index_borruta.csv")
data_borruta <- transform(data,
Region=as.factor(Region),
Habitat_type_classLV2=as.factor(Habitat_type_classLV2))
borruta_output2 <- Boruta(Diversity_index~., data= data, doTrace=2)
borruta_output2 <- Boruta(Diversity_index~., data= data_borruta, doTrace=2)
library(tidyverse)
library(dplyr)
library(Boruta)
borruta_output2 <- Boruta(Diversity_index~., data= data_borruta, doTrace=2)
plot(borruta_output2, xlab = "", xaxt = "n")
k <- lapply(1:ncol(borruta_output2$ImpHistory), function(i)
borruta_output2$ImpHistory[is.finite(borruta_output2$ImpHistory[,i]),i])
names(k) <- colnames(borruta_output2$ImpHistory)
Labels <- sort(sapply(k,median))
axis(side = 1, las=2, labels = names(Labels),
at = 1:ncol(borruta_output2$ImpHistory), cex.axis=0.5)
